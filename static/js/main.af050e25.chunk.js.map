{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","removeClass","document","body","removeAttribute","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","aria-labelledby","onClick","classList","add","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","filterText","split","join","words","length","characters","sentences","style","color","heading","value","onChange","event","target","rows","placeholder","backgroundColor","newText","showAlert","map","e","substring","navigator","clipboard","writeText","toFixed","fontSize","defaultProps","App","setMode","_useState3","_useState4","setAlert","messege","setTimeout","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.af050e25.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n  const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show px-3`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}:</strong> {props.alert.msg}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Alert;\r\nAlert.defaultProps ={\r\n  msg:\"Your Messege here\",\r\n  type:\"success\"\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Outlet, Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  const removeClass = () => {\r\n    document.body.removeAttribute(\"class\");\r\n  };\r\n  const themeRed = () => {\r\n    removeClass();\r\n    document.body.classList.add(\"bg-danger\");\r\n  };\r\n  const themeGreen = () => {\r\n    removeClass();\r\n    document.body.classList.add(\"bg-success\");\r\n  };\r\n  const themeWarning = () => {\r\n    removeClass();\r\n    document.body.classList.add(\"bg-warning\");\r\n  };\r\n  const themeBlue = () => {\r\n    removeClass();\r\n  };\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div\r\n              className={`dropdown mx-4 dropDown-${\r\n                props.mode === \"dark\" ? \"enabled\" : \"disabled\"\r\n              }`}\r\n            >\r\n              <button\r\n                className=\"btn btn dropdown-toggle\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton1\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Dark Themes\r\n              </button>\r\n              <ul\r\n                className=\"dropdown-menu\"\r\n                aria-labelledby=\"dropdownMenuButton1\"\r\n              >\r\n                <li className=\"theme-list\" onClick={themeRed}>\r\n                  <span className=\"theme-color red\"></span> Red\r\n                </li>\r\n                <li className=\"theme-list\" onClick={themeGreen}>\r\n                  <span className=\"theme-color green\"></span> Green\r\n                </li>\r\n                <li className=\"theme-list\" onClick={themeWarning}>\r\n                  <span className=\"theme-color yellow\"></span> Yellow\r\n                </li>\r\n                <li className=\"theme-list\" onClick={themeBlue}>\r\n                  <span className=\"theme-color blue\"></span> Default\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                // eslint-disable-next-line\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.mode === \"dark\" ? \"Disable\" : \"Enable\"} Dark mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {/* <Outlet /> */}\r\n    </>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Your Title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    if (text.length < 1) {\r\n      props.showAlert(\"Enter some text first\", \"warning\");\r\n    } else {\r\n      props.showAlert(\"Text converted to Upper Case\", \"success\");\r\n    }\r\n  };\r\n  const handleLowerClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    if (text.length < 1) {\r\n      props.showAlert(\"Enter some text first\", \"warning\");\r\n    } else {\r\n      props.showAlert(\"Text converted to Lower Case\", \"success\");\r\n    }\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    if (text.length < 1) {\r\n      props.showAlert(\"Enter some text first\", \"warning\");\r\n    } else {\r\n      props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n  };\r\n  const handleProperClick = () => {\r\n    let newText = text\r\n      .split(\". \")\r\n      .map((e) => e.charAt(0).toUpperCase() + e.substring(1).toLowerCase())\r\n      .join(\". \");\r\n    setText(newText);\r\n    if (text.length < 1) {\r\n      props.showAlert(\"Enter some text first\", \"warning\");\r\n    } else {\r\n      props.showAlert(\"Text converted to Proper Case\", \"success\");\r\n    }\r\n  };\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(text);\r\n    if (text.length < 1) {\r\n      props.showAlert(\"Enter some text first\", \"warning\");\r\n    } else {\r\n      props.showAlert(\"Text copied\", \"success\");\r\n    }\r\n  };\r\n  const filterText = text.split(/[ ]+/).join(\" \");\r\n  const handleSpacesClick = () => {\r\n    const filterText = text.split(/[ ]+/).join(\" \");\r\n    setText(filterText);\r\n    if (filterText.length < 1) {\r\n      props.showAlert(\"Enter some text first\", \"warning\");\r\n    } else {\r\n      props.showAlert(\"All extra spaces removed\", \"success\");\r\n    }\r\n  };\r\n  let words = filterText.split(\" \").length;\r\n  let characters = filterText.length;\r\n  // if (        ){}\r\n  let sentences = filterText.split(\". \").length;\r\n  if (characters < 1) {\r\n    words = words - 1;\r\n    sentences = sentences - 1;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n          {props.heading}\r\n        </h1>\r\n        <div className=\"my-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            rows=\"8\"\r\n            placeholder=\"Enter text here:-\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#e0e4e9\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"rgba(0,0,0,0.6)\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"container buttons\">\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n            Convert to Upper Case\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleLowerClick}>\r\n            Convert to Lower Case\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleProperClick}>\r\n            Proper Case\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleSpacesClick}>\r\n            Remove extra spaces\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>\r\n            Copy Text\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>\r\n            Cleear Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your Text Summerey:-</h2>\r\n        <p>\r\n          {words} words and {characters} characters and {sentences} sentences.\r\n        </p>\r\n        <p>\r\n          Time to read these words (average WPM):- {(0.008 * words).toFixed(2)}{\" \"}\r\n          Minutes to read.\r\n        </p>\r\n        <h3>Preview:- </h3>\r\n        <p style={{ fontSize: \"20px\" }}>\r\n          {filterText.length > 0\r\n            ? filterText\r\n            : \"Enter something above to preview\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //Weateher darkmode is enabled or not...\n\n  const [alert, setAlert] = useState(null);\n  const removeClass = () => {\n    document.body.removeAttribute(\"class\");\n  };\n  const toggleMode = () => {\n    removeClass();\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#082370\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  const showAlert = (messege, type) => {\n    setAlert({\n      msg: messege,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  return (\n      <>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n            {/* <Routes>\n              <Route exact path=\"/about\" element={<About />} />\n              <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter your text below:-\" mode={mode}/>} />\n            </Routes> */}\n            <TextForm showAlert = {showAlert} heading = \"Enter yoyr text below:- \" mode={mode}/>\n        </div>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}